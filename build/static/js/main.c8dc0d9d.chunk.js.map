{"version":3,"sources":["components/util/base.js","assets/colors.js","components/util/Playground.js","components/util/AudioNodeElement.js","components/webaudio/biquadFilter.js","components/webaudio/convolverNode.js","components/webaudio/dynamicsCompressor.js","components/webaudio/gainNode.js","components/webaudio/pannerNode.js","components/webaudio/source.js","components/webaudio/waveshaper.js","App.js","index.js"],"names":["H1","styled","h1","_templateObject","CheckboxContainer","label","_templateObject2","Checkbox","props","react_default","a","createElement","class","Object","assign","type","Playground","div","Playground_templateObject","AudioNodeElementContainer","AudioNodeElement_templateObject","AudioNodeElement","title","id","setBypass","Fragment","base_Checkbox","name","checked","bypassed","onChange","e","target","children","BiquadFilterComponent","AudioNodeElement_AudioNodeElement","biquadFilterNode","bypass","htmlFor","instance","value","min","max","defaultValue","step","frequency","Q","ConvolverNodeComponent","convolverNode","DynamicsCompressorComponent","handleDynamicsCompressorChange","dynamicsCompressorNode","GainNodeComponent","gainNode","gain","PannerNodeComponent","_useState","useState","x","y","z","_useState2","slicedToArray","position","setPosition","_useState3","_useState4","orientation","setOrientation","handlePannerPositionChange","newPosition","objectSpread","pannerNode","handlePannerOrientationChange","newOrientation","SourceComponent","src","onCanPlayThrough","setup","onClick","audioElement","document","querySelector","audioContext","state","resume","isPlaying","pause","setIsPlaying","play","disabled","WaveShaperComponent","waveShaperNode","App","nodes","setNodes","_useState5","_useState6","setAudioContext","useEffect","nodeArray","values","sort","b","map","node","createGain","forEach","index","length","disconnect","connect","nodeId","shouldBypass","newNodes","source_SourceComponent","window","AudioContext","webkitAudioContext","source","createMediaElementSource","createWaveShaper","curve","Float32Array","_","i","Math","PI","abs","oversample","createDynamicsCompressor","createBiquadFilter","createConvolver","impulseResponseRequest","XMLHttpRequest","open","responseType","onload","decodeAudioData","response","buffer","send","createPanner","destination","waveshaper_WaveShaperComponent","dynamicsCompressor_DynamicsCompressorComponent","gainNode_GainNodeComponent","biquadFilter_BiquadFilterComponent","convolverNode_ConvolverNodeComponent","pannerNode_PannerNodeComponent","rootElement","getElementById","hasChildNodes","ReactDOM","hydrate","src_App","render"],"mappings":"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","file":"static/js/main.c8dc0d9d.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport {\n  BACKGROUND_COLOR,\n  CONTRAST_COLOR,\n  LIGHTER_COLOR\n} from \"../../assets/colors\";\n\nexport const H1 = styled.h1`\n  color: ${CONTRAST_COLOR};\n  padding: 8px;\n  margin: 0;\n  position: absolute;\n`;\n\nconst CheckboxContainer = styled.label`\n  position: relative;\n  display: inline-block;\n  width: 31px;\n  height: 16px;\n\n  input {\n    opacity: 0;\n    width: 0;\n    height: 0;\n  }\n\n  .slider {\n    position: absolute;\n    border-radius: 17px;\n    cursor: pointer;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background-color: ${BACKGROUND_COLOR};\n    -webkit-transition: 0.4s;\n    transition: 0.4s;\n  }\n\n  .slider:before {\n    position: absolute;\n    content: \"\";\n    height: 10px;\n    width: 10px;\n    left: 3px;\n    bottom: 3px;\n    background-color: white;\n    -webkit-transition: 0.4s;\n    transition: 0.4s;\n    border-radius: 50%;\n  }\n\n  input:checked + .slider {\n    background-color: ${LIGHTER_COLOR};\n  }\n\n  input:focus + .slider {\n    box-shadow: 0 0 1px ${LIGHTER_COLOR};\n  }\n\n  input:checked + .slider:before {\n    -webkit-transform: translateX(15px);\n    -ms-transform: translateX(15px);\n    transform: translateX(15px);\n  }\n`;\n\nexport const Checkbox = props => (\n  <CheckboxContainer class=\"switch\">\n    <input type=\"checkbox\" {...props} />\n    <span class=\"slider\" />\n  </CheckboxContainer>\n);\n","export const BACKGROUND_COLOR = \"#443378\";\nexport const DARK_COLOR = \"#684597\";\nexport const LIGHT_COLOR = \"#714E9C\";\nexport const LIGHTER_COLOR = \"#F487F2\";\nexport const SECONDARY_CONTRAST_COLOR = \"#FACCF4\";\nexport const CONTRAST_COLOR = \"#FFF2FC\";\n","import styled from \"styled-components\";\nimport { CONTRAST_COLOR } from \"../../assets/colors\";\n\nconst PlaygroundContainer = styled.div`\n  color: ${CONTRAST_COLOR};\n  box-sizing: border-box;\n  min-height: 100vh;\n  display: flex;\n  padding: 8px;\n  > * {\n    margin: auto 8px;\n  }\n  > *:first-child {\n    margin-left: auto;\n  }\n  > *:last-child {\n    margin-right: auto;\n  }\n`;\n\nexport const Playground = PlaygroundContainer;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport {\n  DARK_COLOR,\n  LIGHT_COLOR,\n  SECONDARY_CONTRAST_COLOR\n} from \"../../assets/colors\";\nimport { Checkbox } from \"./base\";\n\nconst AudioNodeElementContainer = styled.div`\n  min-width: 180px;\n  box-sizing: border-box;\n  background-color: ${DARK_COLOR};\n  border: solid 4px ${LIGHT_COLOR};\n  border-radius: 4px;\n  font-size: 14px;\n  padding: 4px;\n  > * {\n    display: block;\n  }\n  > h3 {\n    margin: 0px 0px 8px 0px;\n  }\n  > h6 {\n    margin: 0px 0px 8px;\n  }\n  > label {\n    font-weight: bold;\n    font-style: italic;\n    color: ${SECONDARY_CONTRAST_COLOR};\n    margin: 16px 0px;\n  }\n`;\n\nexport const AudioNodeElement = props => {\n  return (\n    <AudioNodeElementContainer>\n      <h3>{props.title}</h3>\n      <h6>{props.id}</h6>\n      {props.setBypass && (\n        <>\n          <Checkbox\n            name=\"enabled\"\n            type=\"checkbox\"\n            checked={!props.bypassed}\n            onChange={e => props.setBypass(props.id, !e.target.checked)}\n          />\n        </>\n      )}\n      {props.children}\n    </AudioNodeElementContainer>\n  );\n};\n","import React from \"react\";\nimport { AudioNodeElement } from \"../util/AudioNodeElement\";\n\nexport const BiquadFilterComponent = props => {\n  const handleFilterFrequencyChange = e => {\n    props.biquadFilterNode.instance.frequency.value = e.target.value;\n  };\n  const handleFilterQChange = e => {\n    props.biquadFilterNode.instance.Q.value = e.target.value;\n  };\n  const handleFilterTypeChange = e => {\n    props.biquadFilterNode.instance.type = e.target.value;\n  };\n  return (\n    <AudioNodeElement\n      bypassed={props.biquadFilterNode && props.biquadFilterNode.bypass}\n      title={\"Filter\"}\n      id={\"biquadFilterNode\"}\n      setBypass={props.setBypass}\n    >\n      <label htmlFor=\"type\">Type</label>\n      <select name=\"type\" onChange={handleFilterTypeChange}>\n        <option>lowpass</option>\n        <option>highpass</option>\n        <option>lowshelf</option>\n        <option>highshelf</option>\n        <option>bandpass</option>\n        <option>allpass</option>\n      </select>\n      <label htmlFor=\"frequency\">Frequency</label>\n      <input\n        name=\"frequency\"\n        type=\"range\"\n        min=\"0\"\n        max=\"40000\"\n        defaultValue=\"350\"\n        step=\"0.01\"\n        onChange={handleFilterFrequencyChange}\n      />\n      <label htmlFor=\"q\">Q</label>\n      <input\n        name=\"q\"\n        type=\"range\"\n        min=\"0\"\n        max=\"20\"\n        defaultValue=\"1\"\n        step=\"0.01\"\n        onChange={handleFilterQChange}\n      />\n    </AudioNodeElement>\n  );\n};\n","import React from \"react\";\nimport { AudioNodeElement } from \"../util/AudioNodeElement\";\n\nexport const ConvolverNodeComponent = props => (\n  <AudioNodeElement\n    bypassed={props.convolverNode && props.convolverNode.bypass}\n    title={\"Reverb\"}\n    id={\"convolverNode\"}\n    setBypass={props.setBypass}\n  />\n);\n","import React from \"react\";\nimport { AudioNodeElement } from \"../util/AudioNodeElement\";\n\nexport const DynamicsCompressorComponent = props => {\n  const handleDynamicsCompressorChange = e => {\n    props.dynamicsCompressorNode.instance[e.target.name].value = e.target.value;\n  };\n\n  return (\n    <AudioNodeElement\n      bypassed={\n        props.dynamicsCompressorNode && props.dynamicsCompressorNode.bypass\n      }\n      title={\"Compressor\"}\n      id={\"dynamicsCompressorNode\"}\n      setBypass={props.setBypass}\n    >\n      <label htmlFor=\"attack\">Attack</label>\n      <input\n        name=\"attack\"\n        type=\"range\"\n        min=\"0\"\n        max=\"1\"\n        defaultValue=\"0.003\"\n        step=\"0.01\"\n        onChange={handleDynamicsCompressorChange}\n      />\n      <label htmlFor=\"knee\">Knee</label>\n      <input\n        name=\"knee\"\n        type=\"range\"\n        min=\"0\"\n        max=\"40\"\n        defaultValue=\"30\"\n        step=\"0.01\"\n        onChange={handleDynamicsCompressorChange}\n      />\n      <label htmlFor=\"ratio\">Ratio</label>\n      <input\n        name=\"ratio\"\n        type=\"range\"\n        min=\"1\"\n        max=\"20\"\n        defaultValue=\"12\"\n        step=\"0.01\"\n        onChange={handleDynamicsCompressorChange}\n      />\n      <label htmlFor=\"release\">Release</label>\n      <input\n        name=\"release\"\n        type=\"range\"\n        min=\"0\"\n        max=\"1\"\n        defaultValue=\"0.25\"\n        step=\"0.01\"\n        onChange={handleDynamicsCompressorChange}\n      />\n      <label htmlFor=\"threshold\">Threshold</label>\n      <input\n        name=\"threshold\"\n        type=\"range\"\n        min=\"-100\"\n        max=\"0\"\n        defaultValue=\"-24\"\n        step=\"0.01\"\n        onChange={handleDynamicsCompressorChange}\n      />\n    </AudioNodeElement>\n  );\n};\n","import React from \"react\";\nimport { AudioNodeElement } from \"../util/AudioNodeElement\";\n\nexport const GainNodeComponent = props => {\n  const handleGainChange = e => {\n    props.gainNode.instance.gain.value = e.target.value;\n  };\n  return (\n    <AudioNodeElement\n      bypassed={props.gainNode && props.gainNode.bypass}\n      title={\"Gain\"}\n      id={\"gainNode\"}\n      setBypass={props.setBypass}\n    >\n      <label htmlFor=\"gain\">Gain</label>\n      <input\n        name=\"gain\"\n        type=\"range\"\n        min=\"0\"\n        max=\"3\"\n        defaultValue=\"1\"\n        step=\"0.01\"\n        onChange={handleGainChange}\n      />\n    </AudioNodeElement>\n  );\n};\n","import React, { useState } from \"react\";\nimport { AudioNodeElement } from \"../util/AudioNodeElement\";\n\nexport const PannerNodeComponent = props => {\n  let [position, setPosition] = useState({ x: 0, y: 0, z: 0 });\n  let [orientation, setOrientation] = useState({ x: 0, y: 0, z: 0 });\n\n  const handlePannerPositionChange = e => {\n    const newPosition = { ...position };\n    newPosition[e.target.name] = e.target.value;\n    setPosition(newPosition);\n    props.pannerNode.instance.setPosition(position.x, position.y, position.z);\n  };\n\n  const handlePannerOrientationChange = e => {\n    const newOrientation = { ...orientation };\n    newOrientation[e.target.name] = e.target.value;\n    setOrientation(newOrientation);\n    props.pannerNode.instance.setOrientation(\n      orientation.x,\n      orientation.y,\n      orientation.z\n    );\n  };\n  return (\n    <AudioNodeElement\n      bypassed={props.pannerNode && props.pannerNode.bypass}\n      title={\"Panner\"}\n      id={\"pannerNode\"}\n      setBypass={props.setBypass}\n    >\n      <label htmlFor=\"x\">x-position</label>\n      <input\n        name=\"x\"\n        type=\"range\"\n        min=\"-1\"\n        max=\"1\"\n        step=\"0.01\"\n        onChange={handlePannerPositionChange}\n      />\n      <label htmlFor=\"y\">y-position</label>\n      <input\n        name=\"y\"\n        type=\"range\"\n        min=\"-1\"\n        max=\"1\"\n        step=\"0.01\"\n        onChange={handlePannerPositionChange}\n      />\n      <label htmlFor=\"z\">z-position</label>\n      <input\n        name=\"z\"\n        type=\"range\"\n        min=\"-1\"\n        max=\"1\"\n        step=\"0.01\"\n        onChange={handlePannerPositionChange}\n      />\n\n      <label htmlFor=\"x\">x-orientation</label>\n      <input\n        name=\"x\"\n        type=\"range\"\n        min=\"-1\"\n        max=\"1\"\n        step=\"0.01\"\n        onChange={handlePannerOrientationChange}\n      />\n      <label htmlFor=\"y\">y-orientation</label>\n      <input\n        name=\"y\"\n        type=\"range\"\n        min=\"-1\"\n        max=\"1\"\n        step=\"0.01\"\n        onChange={handlePannerOrientationChange}\n      />\n      <label htmlFor=\"z\">z-orientation</label>\n      <input\n        name=\"z\"\n        type=\"range\"\n        min=\"-1\"\n        max=\"1\"\n        step=\"0.01\"\n        onChange={handlePannerOrientationChange}\n      />\n    </AudioNodeElement>\n  );\n};\n","import React from \"react\";\nimport { AudioNodeElement } from \"../util/AudioNodeElement\";\n\nexport const SourceComponent = props => {\n  const handlePlayPause = () => {\n    const audioElement = document.querySelector(\"audio\");\n    if (props.audioContext.state === \"suspended\") {\n      props.audioContext.resume();\n    }\n    if (!props.isPlaying) {\n      audioElement.play();\n      props.setIsPlaying(true);\n    } else {\n      audioElement.pause();\n      props.setIsPlaying(false);\n    }\n  };\n  return (\n    <AudioNodeElement title={\"Source\"} id={\"<audio>\"}>\n      <audio src=\"viper.mp3\" type=\"audio/mpeg\" onCanPlayThrough={props.setup} />\n      <button onClick={handlePlayPause} disabled={!props.audioContext}>\n        <span>Play/Pause</span>\n      </button>\n    </AudioNodeElement>\n  );\n};\n","import React from \"react\";\nimport { AudioNodeElement } from \"../util/AudioNodeElement\";\n\nexport const WaveShaperComponent = props => (\n  <AudioNodeElement\n    bypassed={props.waveShaperNode && props.waveShaperNode.bypass}\n    title={\"WaveShaper\"}\n    id={\"waveShaperNode\"}\n    setBypass={props.setBypass}\n  />\n);\n","import React, { useEffect, useState } from \"react\";\nimport { H1 } from \"./components/util/base\";\nimport { Playground } from \"./components/util/Playground\";\nimport { BiquadFilterComponent } from \"./components/webaudio/biquadFilter\";\nimport { ConvolverNodeComponent } from \"./components/webaudio/convolverNode\";\nimport { DynamicsCompressorComponent } from \"./components/webaudio/dynamicsCompressor\";\nimport { GainNodeComponent } from \"./components/webaudio/gainNode\";\nimport { PannerNodeComponent } from \"./components/webaudio/pannerNode\";\nimport { SourceComponent } from \"./components/webaudio/source\";\nimport { WaveShaperComponent } from \"./components/webaudio/waveshaper\";\n\nfunction App() {\n  // Meta\n  let [isPlaying, setIsPlaying] = useState(false);\n  let [nodes, setNodes] = useState(null);\n  let [audioContext, setAudioContext] = useState(null);\n\n  // This function creates the audio nodes\n  const setup = () => {\n    // Init AudioContext and audio source\n    const AudioContext = window.AudioContext || window.webkitAudioContext;\n    const audioContext = new AudioContext();\n    const audioElement = document.querySelector(\"audio\");\n    const source = audioContext.createMediaElementSource(audioElement);\n\n    // Create waveShaperNode\n    const waveShaperNode = audioContext.createWaveShaper();\n    let curve = new Float32Array(256);\n    curve.forEach((_, i) => {\n      let x = (i * 2) / 256 - 1;\n      curve[i] = ((Math.PI + 15) * x) / (Math.PI + 15 * Math.abs(x));\n    });\n\n    waveShaperNode.curve = curve;\n    waveShaperNode.oversample = \"4x\";\n\n    // Create dynamicsCompressorNode\n    const dynamicsCompressorNode = audioContext.createDynamicsCompressor();\n\n    // Create gainNode\n    const gainNode = audioContext.createGain();\n\n    // Create biquadFilterNode\n    const biquadFilterNode = audioContext.createBiquadFilter();\n    biquadFilterNode.type = \"lowpass\";\n\n    // Create convolverNode\n    const convolverNode = audioContext.createConvolver();\n    const impulseResponseRequest = new XMLHttpRequest();\n    impulseResponseRequest.open(\"GET\", \"hall.wav\", true);\n    impulseResponseRequest.responseType = \"arraybuffer\";\n    impulseResponseRequest.onload = () => {\n      audioContext.decodeAudioData(impulseResponseRequest.response, buffer => {\n        convolverNode.buffer = buffer;\n      });\n    };\n    impulseResponseRequest.send();\n\n    // Create pannerNode\n    const pannerNode = audioContext.createPanner();\n\n    // Keep nodes and audio context in state\n    setAudioContext(audioContext);\n    setNodes({\n      source: { instance: source, position: 0 },\n      waveShaperNode: { instance: waveShaperNode, position: 1, bypass: true },\n      dynamicsCompressorNode: {\n        instance: dynamicsCompressorNode,\n        position: 2,\n        bypass: true\n      },\n      gainNode: { instance: gainNode, position: 3, bypass: true },\n      biquadFilterNode: {\n        instance: biquadFilterNode,\n        position: 4,\n        bypass: true\n      },\n      convolverNode: { instance: convolverNode, position: 5, bypass: true },\n      pannerNode: { instance: pannerNode, position: 6, bypass: true },\n      destination: { instance: audioContext.destination, position: 7 }\n    });\n  };\n\n  // This function builds the audio node graph each time \"nodes\" is set\n  useEffect(() => {\n    if (nodes) {\n      // Map nodes object to an array ordered by node position\n      let nodeArray = Object.values(nodes).sort(\n        (a, b) => a.position > b.position\n      );\n      // Replace \"bypassed\" nodes with a gain node\n      nodeArray = nodeArray.map(node =>\n        node.bypass ? { ...node, instance: audioContext.createGain() } : node\n      );\n      // Build audio node graph\n      nodeArray.forEach((node, index) => {\n        if (index < nodeArray.length - 1) {\n          // Remove any existing output connections\n          node.instance.disconnect();\n          // Connect node to consecutive node\n          node.instance.connect(nodeArray[index + 1].instance);\n        }\n      });\n    }\n  }, [audioContext, nodes]);\n\n  // Util method for setting the bypass flag of a node\n  const setBypass = (nodeId, shouldBypass) => {\n    const newNodes = { ...nodes };\n    newNodes[nodeId].bypass = shouldBypass;\n    setNodes(newNodes);\n  };\n\n  return (\n    <>\n      <H1>Webaudio API</H1>\n      <Playground>\n        <SourceComponent\n          setup={setup}\n          isPlaying={isPlaying}\n          audioContext={audioContext}\n          setIsPlaying={setIsPlaying}\n        />\n        <WaveShaperComponent\n          waveShaperNode={nodes && nodes.waveShaperNode}\n          setBypass={setBypass}\n        />\n        <DynamicsCompressorComponent\n          dynamicsCompressorNode={nodes && nodes.dynamicsCompressorNode}\n          setBypass={setBypass}\n        />\n        <GainNodeComponent\n          gainNode={nodes && nodes.gainNode}\n          setBypass={setBypass}\n        />\n\n        <BiquadFilterComponent\n          biquadFilterNode={nodes && nodes.biquadFilterNode}\n          setBypass={setBypass}\n        />\n        <ConvolverNodeComponent\n          convolverNode={nodes && nodes.convolverNode}\n          setBypass={setBypass}\n        />\n        <PannerNodeComponent\n          pannerNode={nodes && nodes.pannerNode}\n          setBypass={setBypass}\n        />\n      </Playground>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\n\nif (rootElement.hasChildNodes()) {\n  ReactDOM.hydrate(<App />, rootElement);\n} else {\n  ReactDOM.render(<App />, rootElement);\n}\n"],"sourceRoot":""}